import { Bot } from 'grammy';
import { getServiceKeyboard } from '../keyboards/service';
import type { MyContext } from '../types';
import {setLocalizedCommands} from "../utils/setLocalizedCommands";

export default function setupLanguageHandlers(bot: Bot<MyContext>) {
    bot.hears(['üáµüá± Polski', 'üá∫üá¶ –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞'], async (ctx) => {
        try {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Ç–µ–∫—Å—Ç–∞
            if (!ctx.message || !('text' in ctx.message)) {
                console.warn('Message or text is undefined');
                return;
            }

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —è–∑—ã–∫
            const selectedLang = ctx.message.text === 'üáµüá± Polski' ? 'pl' : 'ua';

            ctx.session.lang = selectedLang;

            await setLocalizedCommands(ctx, selectedLang);

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥–∏
            await ctx.reply(
                selectedLang === 'ua' ? '–û–±–µ—Ä—ñ—Ç—å –ø–æ—Å–ª—É–≥—É:' : 'Wybierz us≈Çugƒô:',
                {
                    reply_markup: getServiceKeyboard(selectedLang),
                    parse_mode: 'HTML'
                }
            );
        } catch (e) {
            console.error('[LANGUAGE HANDLER ERROR]:', e);
            await ctx.reply('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –≤–∏–±–æ—Ä—É –º–æ–≤–∏');
        }
    });
}