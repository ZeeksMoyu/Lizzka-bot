const { Client } = require('../models');
const { getMainMenu } = require('../keyboards/main');

async function setup(bot) {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–∞–ª–µ—Ä–µ–∏
    bot.hears(['–ì–∞–ª–µ—Ä–µ—è', 'Galeria'], async (ctx) => {
        console.log(`[GALLERY] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${ctx.from.id} –∑–∞–ø—Ä–æ—Å–∏–ª –≥–∞–ª–µ—Ä–µ—é`);

        const lang = ctx.session.lang || 'pl';
        const galleryUrl = "https://telegra.ph/Galereya-shole-07-02";

        try {
            await ctx.reply(
                lang === 'ua'
                    ? "üîó –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –≥–∞–ª–µ—Ä–µ—ó..."
                    : "üîó Przekierowanie do galerii...",
                {
                    reply_markup: {
                        inline_keyboard: [
                            [{
                                text: lang === 'ua' ? "üëâ –ü–µ—Ä–µ–π—Ç–∏" : "üëâ Przejd≈∫",
                                url: galleryUrl
                            }]
                        ]
                    }
                }
            );
        } catch (e) {
            console.error('[GALLERY] –û—à–∏–±–∫–∞:', e);
            ctx.reply(lang === 'ua' ? '‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –≥–∞–ª–µ—Ä–µ—ó' : '‚ö†Ô∏è B≈ÇƒÖd otwierania galerii');
        }
    });

    bot.hears(['Um√≥w wizytƒô', '–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è'], async (ctx) => {
        console.log(`[APPOINT] –ù–∞—á–∞–ª–æ –∑–∞–ø–∏—Å–∏ –æ—Ç ${ctx.from.id}`);

        try {
            const lang = ctx.session.lang || 'pl';
            await ctx.reply(
                lang === 'ua'
                    ? "–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω (–Ω–∞–ø—Ä: –Ü–≤–∞–Ω +380123456789):"
                    : "Podaj imiƒô i telefon (np: Jan +48123456789):"
            );
            ctx.session.waitingForContact = true;
        } catch (e) {
            console.error('[APPOINT] –û—à–∏–±–∫–∞:', e);
            ctx.reply('‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª–∞ –∑–∞–ø–∏—Å–∏');
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    bot.on('message:text', async (ctx) => {
        if (!ctx.session.waitingForContact) return;

        console.log(`[APPOINT] –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –æ—Ç ${ctx.from.id}`);

        try {
            const lang = ctx.session.lang || 'pl';
            const text = ctx.message.text;
            const contactRegex = /^[A-Za-z–ê-–Ø–∞-—è—ñ—ó—î“ë\s]+\+\d+$/;

            if (!contactRegex.test(text)) {
                const errorMsg = lang === 'ua'
                    ? "–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç. –ü—Ä–∏–∫–ª–∞–¥: –Ü–≤–∞–Ω +380123456789"
                    : "Nieprawid≈Çowy format. Przyk≈Çad: Jan +48123456789";
                return ctx.reply(errorMsg);
            }

            const [name, phone] = text.split('+');
            const formattedPhone = `+${phone.trim()}`;

            await Client.create({
                name: name.trim(),
                phone: formattedPhone,
                language: lang,
                service: ctx.session.service || 'tattoo',
                date: new Date()
            });

            const successMsg = lang === 'ua'
                ? "–î—è–∫—É—î–º–æ! –ú–∏ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏."
                : "Dziƒôkujemy! Skontaktujemy siƒô wkr√≥tce.";

            await ctx.reply(successMsg, {
                reply_markup: getMainMenu(lang, ctx.session.service)
            });

            ctx.session.waitingForContact = false;
        } catch (e) {
            console.error('[APPOINT] –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', e);
            ctx.reply('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏');
        }
    });
}

module.exports = { setup };